@{
    ViewBag.Title = "Treeview demo";
}

<p>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lobortis, ipsum ut vulputate vestibulum, sem odio fermentum magna, sed ultricies sem purus et dolor. Aliquam dapibus felis magna, vitae ultrices sem posuere eu. Sed ante orci, dictum tincidunt eros quis, sagittis rutrum sem. Vivamus ac commodo est. Nunc gravida maximus ligula, quis dictum sem vestibulum eget. Sed vel facilisis lacus. Ut nisl mi, ultrices quis auctor iaculis, cursus quis lacus. Nullam lectus risus, faucibus non laoreet eget, bibendum vel ligula. Aenean at pharetra augue, sed consequat velit. Aenean tincidunt gravida semper. Quisque dictum ullamcorper sem non placerat.
</p>

<div class="row">
    <div class="col-6 offset-3">
        <div id="treeview-1">
        </div>
    </div>
</div>

<p>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lobortis, ipsum ut vulputate vestibulum, sem odio fermentum magna, sed ultricies sem purus et dolor. Aliquam dapibus felis magna, vitae ultrices sem posuere eu. Sed ante orci, dictum tincidunt eros quis, sagittis rutrum sem. Vivamus ac commodo est. Nunc gravida maximus ligula, quis dictum sem vestibulum eget. Sed vel facilisis lacus. Ut nisl mi, ultrices quis auctor iaculis, cursus quis lacus. Nullam lectus risus, faucibus non laoreet eget, bibendum vel ligula. Aenean at pharetra augue, sed consequat velit. Aenean tincidunt gravida semper. Quisque dictum ullamcorper sem non placerat.
</p>

<script type="text/javascript">
    var container = $('#treeview-1');
    var data = [
        {
            value: 1,
            text: 'A value',
            children: [
                {
                    value: 3,
                    text: 'Child'
                },
                {
                    value: 4,
                    text: 'Child with children',
                    children: [
                        {
                            value: 8,
                            text: 'Quux'
                        }
                    ]
                },
                {
                    value: 5,
                    text: 'Foo'
                }
            ]
        },
        {
            value: 2,
            text: 'Another please',
            children: [
                {
                    value: 6,
                    text: 'Bar'
                },
                {
                    value: 7,
                    text: 'Baz'
                }
            ]
        }
    ];

    var root = $('<ul>', { class: 'treeview-list' });
    container.append(root);

    function HandleSelection(e) {
        var checked = $(e.target).is(':checked');
        var node = $(e.target).closest('li');

        node.find('input.treeview-selector').prop('checked', checked);

        if (checked) {
            node.parents('li').children('input.treeview-selector').prop('checked', function () {
                return $(this).closest('li').find('input.treeview-selector').not(this).not(':checked').length == 0;
            });
        }
        else {
            node.parents('li').children('input.treeview-selector').prop('checked', false);
        }
    }

    function HandleToggle(e) {
        $(e.target).toggleClass('treeview-toggler-closed');
        $(e.target).data('toggle-target').toggle();
    }

    function CreateNode(list, nodeData) {
        var nodeId = Math.random().toString().replace('.', '');
        var node = $('<li>');

        var checkbox = $('<input>', { class: 'treeview-selector', type: 'checkbox', value: nodeData.value, id: nodeId });
        checkbox.change(HandleSelection);
        node.append(checkbox);

        node.append($('<label>', { for: nodeId, class: 'treeview-selector-label' }).text(nodeData.text));
        node.data('node-data', nodeData);
        list.append(node);

        if (nodeData.children) {
            var childList = $('<ul>', { class: 'treeview-list' });
            var toggler = $('<div>', { class: 'treeview-toggler' });
            node.prepend(toggler);
            toggler.data('toggle-target', childList);
            toggler.click(HandleToggle);

            node.append(childList);
            $.each(nodeData.children, function (_, nodeData) {
                CreateNode(childList, nodeData);
            });
        }
    }

    $.each(data, function (_, nodeData) {
        CreateNode(root, nodeData);
    });
</script>

<style type="text/css">
    .treeview-list {
        list-style: none;
        padding-left: 2em;
        margin-left: 0;
        position: relative;
        overflow: hidden;
    }

    .treeview-list .treeview-list {
        padding-top: 1em;
        margin-top: -1em;
    }

    .treeview-list li {
        position: relative;
    }

    .treeview-list li::after {
        content: "";
        height: 1000em;
        width: 2.25em;
        border-left: 1px solid black;
        border-bottom: 1px solid black;
        position: absolute;
        left: -1.625em;
        top: -999.25em;
        background: transparent;
    }

    .treeview-toggler {
        display: inline-block;
        width: .75em;
        height: .75em;
        position: relative;
        border: 1px solid black;
        background: #ffffff;
        z-index: 1;
    }

    .treeview-toggler-closed::before {
        content: "";
        background-color: #000000;
        width: 2px;
        height: .5em;
        position: absolute;
        top: calc(50% - .25em);
        left: calc(50% - 1px);
    }

    .treeview-toggler::after {
        content: "";
        background-color: #000000;
        width: .5em;
        height: 2px;
        position: absolute;
        top: calc(50% - 1px);
        left: calc(50% - .25em);
    }

    .treeview-selector {
        margin-right: 0.5em;
        margin-left: 0.5em;
    }

    .treeview-selector:first-child {
        margin-left: 1.25em;
    }

    .treeview-selector, .treeview-selector-label {
        position: relative;
        z-index: 11;
    }
</style>